@import url(https://fonts.googleapis.com/css?family=Teko:300,regular,500,600,700);
@import url(https://fonts.googleapis.com/css?family=Dancing+Script:regular,500,600,700);

/** VARIABLES */

:root {
  --font-principal: 'Teko';
  --font-cursiva: 'Dancing Script';
  --gris600: #2F2E2E;
  --gris200: #706D6D;
}

/** GENERALES */

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  /* El font-family de todos mis elementos, pero los títulos, subtítulos y ciertos elementos cursivos
     tendrán las fuentes arriba declaradas. */
  font-family: Arial, Helvetica, sans-serif;
  color: var(--gris600);
}

a {
  text-decoration: none;
}

h1, h2 {
  font-family: var(--font-principal);  
}

h3 {
  font-family: var(--font-cursiva);
}

/** BOTONES */

.btn {
  background: transparent;
  width: 130px;
  height: 42px;
  font-size: 20px;
  text-transform: uppercase;
  cursor: pointer;
  transition: all .5s;
}

.btn.light {
  color: #FFF;
  border: 2px solid #FFF;
}

.btn.dark {
  color: var(--gris600);
  border: 2px solid var(--gris600);
}

.btn:hover {
  background: var(--gris600);
  border: 2px solid var(--gris600);
  color: #FFF;
}

/** GRID */
/* Estilos generales de grid para todo nuestro proyecto.
   Vamos a montar una grid de 12 columnas y filas automáticas que abarcan el 100% del contenedor padre */

.grid {
  display: grid;
  grid-template-columns: repeat(12, 1fr);
  grid-template-rows: auto;
  height: 100%;
}

/* Queremos que el ancho de nuestro contenido ocupe el 85% para que no se pegue mucho a los bordes,
 y esté centrado a los lados */
.container-center {
  width: 85%;
  margin: 0 auto;
}

/* Vamos a expandir 6 columnas aquel contenido que nos interese */
.span6 {
  grid-column: span 6;
}

/** CLASES GENERALES PARA SECCIONES */
/* Esto es porque en nuestra página va a haber muchas etiquetas section */

/* Queremos que cada una de nuestras secciones abarque todo el ancho y todo el alto del navegador */
/* Indicamos position: relative porque más adelante vamos a trabajar con pseudoelementos */
section {
  position: relative;
  width: 100%;
  height: 100vh;
}

section.full::before {
  content: '';

  /* Recordar que section tiene position: relative, así que aquí puedo indicar position:absolute */
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;

  background-attachment: fixed !important;
  background-position: center !important;
  background-size: cover !important;
}

/** CONTENEDOR BACKGROUND */
/* En vez de colocar estas dos propiedades en cada elemento,
   la hago general y, para que se aplique, la hago !important. */

.background {
  background-size: cover !important;
  background-position: right !important;
}


/** TEXT CONTENT */

.text-content {
  position: relative;
  width: 100%;
  height: 100%;

  /* Para centrar horizontalmente usamos flexbox */
  /* Aquí centramos dentro de su columna, la 1 */
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;

  /* Para que se posione por encimma del background */
  z-index: 1;
}

/*? Full */

/* Con esto conseguimos que el elemento, que ocupaba una columna, se expanda hasta las 12, y
   como estaba centrado en su columna, ahora esta completamente centrado en todo el ancho. */
.text-content.full {
  grid-column: span 12;
}

.text-content.full h1,
.text-content.full h2 {
  color: #FFF;
  text-transform: uppercase;
  text-align: center;
}

.text-content.full h1 {
  font-size: 115px;
  letter-spacing: 20px;
  line-height: 1.5;
  font-family: Arial, Helvetica, sans-serif;
}

.text-content.full h2 {
  font-size: 50px;
  letter-spacing: 2px;
  font-weight: 100;
  line-height: 0.1;
}

/*? Lateral */

.text-content.lateral {
  padding: 0 50px;
}

.text-content.lateral h1 {
  font-size: 55px;
  font-weight: 400;
  letter-spacing: 2px;
  line-height: 1;
  text-align: center;
}

.text-content.lateral h3 {
  font-size: 40px;
  font-weight: 600;
  text-align: center;
}

.text-content.lateral p {
  font-size: 20px;
  margin: 20px 0;
  text-align: center;
  letter-spacing: 0.5px;
}

/** MENU DE NAVEGACION */

nav {
  /* El menú siempre va a estar fijo en la parte superior de la pantalla */
  position: fixed;
  top: 0;
  left: 0;

  width: 100%;
  height: 50px;

  background: rgba(249, 219, 121, 0.745);

  /* Como el menu es fijo, conforme avancemos usando el scroll queremos asegurarnos de que quede por encima
     de los demás elementos */
  z-index: 3;
}

nav .grid {
  justify-items: start;
  align-items: center;
}

/* Los elementos de enlace van a abarcar 10 columnas, y el
   resto, 2 columnas, lo dejamos para las redes sociales. */
/* El resto de estilos lo aplicamos usando Flexbox */
nav .enlaces {
  grid-column: span 10;

  display: flex;
  justify-content: center;
  align-items: center;
}

nav .enlaces a {
  margin-right: 20px;
  font-family: var(--font-principal);
  font-size: 20px;
  text-transform: uppercase;
  letter-spacing: 1px;
  transition: all .5s;
}

nav .enlaces a:hover {
  color: var(--gris200)
}

/*? Sociales */
.sociales {
  grid-column: span 2;
  display: flex;
  justify-content: flex-end;
  /* Si no aplicamos este ancho, indicando que su ancho es
     del 100% (el de las 2 columnas), no se mueven al final */
  width: 100%;
}

/* Estilos a cada elemento de sociales */
.sociales a {
  width: 30px;
  height: 30px;
  border-radius: 50%;
  background: #000;
  color: #FFF;

  /* Como tenemos tamaño, podemos centrar cada icono usando FlexBox */
  display: flex;
  justify-content: center;
  align-items: center;

  /* Otra forma de centrar usando grid */
  /* display: grid;
  place-items: center; */
}

/** HEADER */

header {
  /* Indicamos position relative porque vamos a tener pseudoelementos que trabajen con el
     y voy a necesitar poder ubicar donde quiera.
  */
  position: relative;
  width: 100%;
  /* Sumo 50px que es lo que ocupa mi nav. Esto provoca que aparezca el scroll,
     que no me importa porque va a haber más páginas hacia abajo.
     Pero si no lo hago, en algunas pantallas más pequeñas la imagen del
     background se va a ver sobrepuesta con el nav. */
  height: calc(100vh + 50px);
  background: #F9DB79;
}

header::before {
  content: '';

  /* Aquí indicamos position absolute para poder trabajar junto al position relative de arriba.
     Coloco el elemento donde quiera. */
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;

  background: url(img/image1.webp);
  background-repeat: no-repeat;
  background-position: center;
}

header .grid {
  /* Centramos en su alto de columna (la 1) usando grid */
  justify-items: center;
  align-items: center;
}

header .text-content {
  /* Con esto se ubica un poco más abajo del centro */
  padding: 200px 0 0 0;
}

header .text-content h3 {
  /* De nuevo, el contenedor header tenía un position: relative, y ahora,
  indicando aquí position: absolute, lo puedo ubicar donde quiera con respecto a ese contenedor. */
  position: absolute;
  bottom: 50px;
  right: 0;
  font-size: 50px;
  font-weight: 700;
  color: #000;
}

/** SABORES */

.sabores div.background {
  background: url(img/image2.webp);
}

/** ESPECIAL */

.especial {
  background: #B5E8D5;
}

/* Aprovecho un pseudoelemento para colocar otro background, esta vez una imagen de fondo */
/* La propiedad obligatoria content y demás propiedades lo tiene su estilo general section.full::before */
.especial::before {
  background: url(img/image3.webp);
}

/** LUGAR */

.lugar .background {
  background: url(img/image4.webp);
}


/** EVENTOS */

.eventos {
  background: #FFBFB3;
}

/* Aprovecho un pseudoelemento para colocar otro background, esta vez una imagen de fondo */
/* La propiedad obligatoria content y demás propiedades lo tiene su estilo general section.full::before */
.eventos::before {
  background: url(img/image5.webp);
}

/* Arreglo concreto de un botón sobre los estilos generales */
.eventos .btn {
  width: 200px;
}

/** POSTRES */

.postres .background {
  background: url(img/image6.webp);
}

/** HELADOS */

.helado {
  background: url(img/image7.webp), #B5E8D5;
  background-attachment: fixed;
  background-size: cover;

  /* Acoplando la imagen para que se vea correcta usando flex */
  display: flex;
}

.helado img {
  width: 100%;
  object-fit: cover;
}
