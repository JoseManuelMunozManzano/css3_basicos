@import url(https://fonts.googleapis.com/css?family=Teko:300,regular,500,600,700);
@import url(https://fonts.googleapis.com/css?family=Dancing+Script:regular,500,600,700);

/** VARIABLES */
:root {
  --font-principal: 'Teko';
  --font-cursiva: 'Dancing Script';
  --gris600: #2F2E2E;
  --gris200: #706D6D;
}

/** GENERALES */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  /* El font-family de todos mis elementos, pero los títulos, subtítulos y ciertos elementos cursivos
     tendrán las fuentes arriba declaradas. */
  font-family: Arial, Helvetica, sans-serif;
  color: var(--gris600);
}

a {
  text-decoration: none;
}

h1, h2 {
  font-family: var(--font-principal);  
}

h3 {
  font-family: var(--font-cursiva);
}

/** GRID */
/* Estilos generales de grid para todo nuestro proyecto.
   Vamos a montar una grid de 12 columnas y filas automáticas que abarcan el 100% del contenedor padre */

.grid {
  display: grid;
  grid-template-columns: repeat(12, 1fr);
  grid-template-rows: auto;
  height: 100%;
}

/* Queremos que el ancho de nuestro contenido ocupe el 85% para que no se pegue mucho a los bordes,
 y esté centrado a los lados */
.container-center {
  width: 85%;
  margin: 0 auto;
}

/* Vamos a expandir 6 columnas aquel contenido que nos interese */
.span6 {
  grid-column: span 6;
}

/** CLASES GENERALES PARA SECCIONES */
/* Esto es porque en nuestra página va a haber muchas etiquetas section */

/* Queremos que cada una de nuestras secciones abarque todo el ancho y todo el alto del navegador */
/* Indicamos position: relative porque más adelante vamos a trabajar con pseudoelementos */
section {
  position: relative;
  width: 100%;
  height: 100vh;
}

/** MENU DE NAVEGACION */

nav {
  /* El menú siempre va a estar fijo en la parte superior de la pantalla */
  position: fixed;
  top: 0;
  left: 0;

  width: 100%;
  height: 50px;

  background: rgba(249, 219, 121, 0.745);

  /* Como el menu es fijo, conforme avancemos usando el scroll queremos asegurarnos de que quede por encima
     de los demás elementos */
  z-index: 3;
}

nav .grid {
  justify-items: start;
  align-items: center;
}

/* Los elementos de enlace van a abarcar 10 columnas, y el
   resto, 2 columnas, lo dejamos para las redes sociales. */
/* El resto de estilos lo aplicamos usando Flexbox */
nav .enlaces {
  grid-column: span 10;

  display: flex;
  justify-content: center;
  align-items: center;
}

nav .enlaces a {
  margin-right: 20px;
  font-family: var(--font-principal);
  font-size: 20px;
  text-transform: uppercase;
  letter-spacing: 1px;
  transition: all .5s;
}

nav .enlaces a:hover {
  color: var(--gris200)
}

/*? Sociales */
.sociales {
  grid-column: span 2;
  display: flex;
  justify-content: flex-end;
  /* Si no aplicamos este ancho, indicando que su ancho es
     del 100% (el de las 2 columnas), no se mueven al final */
  width: 100%;
}

/* Estilos a cada elemento de sociales */
.sociales a {
  width: 30px;
  height: 30px;
  border-radius: 50%;
  background: #000;
  color: #FFF;

  /* Como tenemos tamaño, podemos centrar cada icono usando FlexBox */
  display: flex;
  justify-content: center;
  align-items: center;

  /* Otra forma de centrar usando grid */
  /* display: grid;
  place-items: center; */
}
