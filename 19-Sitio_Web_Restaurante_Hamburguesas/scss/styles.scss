@use 'sass:color';

//* FONTS
@import url(https://fonts.googleapis.com/css?family=Poppins:100,100italic,200,200italic,300,300italic,regular,italic,500,500italic,600,600italic,700,700italic,800,800italic,900,900italic);

@import url(https://fonts.googleapis.com/css?family=Merienda:300,regular,500,600,700,800,900);

//* VARIABLES 
$white: #FFF;
$gris100: #DEDEDE;
$gris200: #CCC;
$gris300: #999;
$gris400: #666;
$gris600: #444;
$gris700: #222;
$black: #000;
$color-primario: #FF7B00;
// scale() es una función de SASS que permite asignar un color y darle un porcentaje de $lightness.
//    Si ese valor es negativo, el color se oscurece.
//    Si ese valor es positivo, el color se aclara.
// scale() también permite dar porcentajes de #saturation, $alpha...
// Ver https: //sass-lang.com/documentation/modules/color/#scale
$color-primario-dark: color.scale($color-primario, $lightness: 10%);

//* RESET
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
} 

//* GENERALES
// Estos estilos generales asignados a clases nos sirven a manera de framework, son reutilizables.

body {
  font-family: "Poppins", sans-serif;  
}

a {
  text-decoration: none;
}

header, section {
  padding: 100px 0;
}

.box-center {
  width: 80%;
  margin: auto;
}

h1.tprincipal {
  font-family: "Merienda";
  color: $white;
  // Tamaño de fuente responsive
  font-size: 12vmin;
  font-weight: bold;
}

h1 {
  color: $white;
  font-size: 10vmin;
  font-weight: 600;
  letter-spacing: 2px;
  text-transform: uppercase;
  text-align: center;
}

h2.tsecundario {
  font-size: 4vmin;
  text-align: center;
  color: $white;
  letter-spacing: 6px;
  font-weight: 400;
}

h3 {
  margin-bottom: 70px;
  text-transform: uppercase;
  font-size: 35px;
  color: $gris700;
}

h4 {
  color: $gris600;
  font-weight: 400;
  font-size: 30px;
  text-transform: uppercase;
}

h5 {
  font-size: 20px;
  font-weight: 400;
}

//* Paleta de colores de texto gris
@function colorArithmetic($color, $scale: 1, $offset: 0) {
  $red: (
    color.channel($color, "red", $space: rgb) * $scale) + $offset;
  $green: (
    color.channel($color, "green", $space: rgb) * $scale) + $offset;
  $blue: (
    color.channel($color, "blue", $space: rgb) * $scale) + $offset;
  @return rgb($red, $green, $blue)
}

@for $i from 1 through 8 {
  .text-solid#{$i} {
    color: colorArithmetic($gris700, $i);
  }
}

// Esto sería otra forma de hacerlo, pero no sale exactamente igual
// @for $i from 1 through 8 {
//   .text-solid#{$i} {
//     color: color.scale($gris700, $lightness: $i * 10%);
//   }
// }

//* Paleta de background de color gris
@for $i from 1 through 8 {
  .bg-solid#{$i} {
    background: colorArithmetic($gris700, $i);
  }
}

.text-primario {
  color: $color-primario;
}

.bg-primario {
  background: $color-primario;
}

.text-center {
  text-align: center;
}

.text-lite {
  font-family: "Merienda";
}

.border {
  border: 1px solid $gris200;
}
