* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  display: grid;
  place-items: center;
  height: 100vh;
  background: #000;
}

.grid-container {
  width: 100%;
  padding: 5px;
  display: grid;
  gap: 5px;

  grid-template-columns: repeat(4, 1fr);
  grid-template-rows: repeat(3, 210px);
}

.item {
  transition: all 0.3s;
}

/* Al hacer hover en .grid-container se van a aplicar estilos a los .item */
.grid-container:hover .item {
  opacity: 0.2;
}

/* Debido a la especificidad, esta regla no se aplica, por eso se indica el !important */
/* .item:hover {
  opacity: 1 !important;
} */

/* Otra forma de hacer lo mismo sin usar el !important es hacer que la especificidad sea mayor */
body .grid-container .item:hover {
  opacity: 1;
}

.item img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

/* Hijo por hijo se podría hacer que cada imagen ocupase las filas o columnas que quisiéramos,
   pero se va a hacer más genérico, expandiendo en función de nombres de clases (ver el HTML) */
.r-span2 {
  grid-row: span 2;
}

.c-span2 {
  grid-column: span 2;
}
