/* La fuente se ha importado en VSCode, usando Cmd+Ship+P, seleccionando Google Fonts: Insert CSS @Import y seleccionado la fuente de letra Roboto */

@import url(https://fonts.googleapis.com/css?family=Roboto:100,100italic,300,300italic,regular,italic,500,500italic,700,700italic,900,900italic);

/** GENERALES  */

:root {
  --color-principal: #6610f2;
  --color-secundario: #0c91e5;
  --color-alternativo: #ff6537;
  --gris-default: #66757d;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: 'Roboto';
}

a {
  text-decoration: none;
}

/* El .btn y el .badge no están asociadas a ningún elemento porque son
clases generales que pueden reutilizarse.
Dejo preparado un transition por si quiero aplicarlo en clases concretas. */
.btn {
  width: 200px;
  height: 40px;
  border: none;
  border-radius: 5px;
  background: var(--color-secundario);
  color: #fff;
  font-size: 14px;
  font-weight: 600;
  text-transform: uppercase;

  /* Para centrar el texto en el componente creado arriba */
  display: flex;
  justify-content: center;
  align-items: center;

  cursor: pointer;
  transition: all 0.5s;
}

.btn:hover {
  background: #0874b8;
}

.badge {
  background: var(--color-principal);
  color: #fff;
  font-size: 11px;
  font-weight: 600;
  text-transform: uppercase;
  border-radius: 20px;
  padding: 5px 15px;
  cursor: default;
  transition: all 0.5s;
}

/** MENU SOCIALES */
.nav-sociales {
  width: 100%;
  height: 35px;

  display: flex;
  justify-content: center;
  align-items: center;

  background: var(--color-principal);
}

.nav-sociales a {
  /* Conseguimos un gris */
  color: #fff;
  opacity: 0.5;

  font-size: 14px;
  margin: 0 30px;
  transition: all 0.5s;
}

.nav-sociales a:hover {
  opacity: 1;
}

/** MENU PRINCIPAL  */
.nav-principal {
  width: 100%;
  height: 50px;

  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 30px;
}

.nav-principal img {
  /* Hacemos la imagen más pequeña */
  width: 250px;

  cursor: pointer;
}

.nav-principal .input-search {
  width: 40%;
  position: relative;
}

.nav-principal .input-search input {
  /* El input ocupa el 100% del 40% que ocupa el contenedor .input-search */
  width: 100%;

  height: 35px;
  border-radius: 50px;
  border: 1px solid #c4c4c4;
  color: var(--gris-default);
  outline: none;
  padding: 0 50px 0 30px;
}

.nav-principal .input-search input::placeholder {
  letter-spacing: 1px;
  color: #ccc;
}

.nav-principal .input-search i {
  /* Como indicamos en .nav-principal .input-search que la posición era relative,
  ahora puedo indicar aquí un posicionamiento absolute y colocarlo donde quiera */
  position: absolute;
  top: 0;
  right: 0;

  /* Le damos tamaño para aplicarle flexbox y poder terminar de posicionarlo */
  width: 50px;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;

  color: var(--color-alternativo);
}

.nav-principal .enlaces a {
  font-size: 14px;
  padding: 10px 15px;
  margin: 0 10px;
  text-transform: uppercase;
  font-weight: 600;
  letter-spacing: 1px;
  color: var(--gris-default);
  border-radius: 50px;
  transition: all 0.3s;
}

.nav-principal .enlaces a:hover {
  color: #fff;
}

.nav-principal .enlaces a:nth-child(1):hover {
  background: var(--color-alternativo);
}

.nav-principal .enlaces a:nth-child(2):hover {
  background: var(--color-principal);
}

.nav-principal .enlaces a:nth-child(3):hover {
  background: var(--color-secundario);
}

/** HEADER */
header {
  width: 100%;
  /* Entre menú sociales, menú principal y paddings, más o menos son 95px */
  /* Restando esa cantidad evito que aparezca scroll */
  height: calc(100vh - 95px);

  display: flex;
  justify-content: flex-start;
  align-items: center;

  padding-left: 50px;
}

header .imagen-header {
  width: 60%;
  height: 100%;

  background: url(img/game1.png);
  background-size: cover;
  background-position: center;

  /* Para que se vea de forma circular y posicionando el trozo de
  la imagen que queremos que aparezca */
  /* Para que sea responsive, hay que usar un SVG, así que este PNG no
  es realmente responsive y solo se ve bien a pantalla completa */
  clip-path: circle(90% at 92% 50%);
  z-index: 2;
  transition: all 0.5s;
}

header .content-header {
  /* Disminuimos el tamaño del texto para que la imagen abarque más */
  width: 50%;
}

/* El * indica a todos los elementos */
header .content-header * {
  margin: 10px 0;
}

header .content-header h3 {
  font-size: 65px;
  font-weight: 300;
}

header .content-header P {
  font-size: 19px;
}

/** DESTACADOS */
.destacados {
  position: relative;

  display: flex;
  justify-content: center;
  align-items: center;

  /* Respeta el tamaño y se posiciona en distintas filas */
  flex-wrap: wrap;
}

/* También vale ::after */
.destacados::before {
  content: 'Destacados';
  position: absolute;
  display: flex;
  justify-content: center;
  align-items: center;
  font-weight: 600;
  font-size: 12em;
  color: rgba(0, 0, 0, 0.07);
}

.game {
  position: relative;
  width: 45%;
  height: 350px;
  margin: 40px 20px;

  display: flex;
  justify-content: flex-start;
  align-items: center;

  transition: all 0.5s;
}

.game:nth-child(1) {
  background: linear-gradient(45deg, #10214c, #da3dbe);
}

.game:nth-child(2) {
  background: linear-gradient(45deg, #1a2f3f, #7094ce);
}

.game:nth-child(3) {
  background: linear-gradient(45deg, #000, #1c78b2);
}

.game:nth-child(4) {
  background: linear-gradient(45deg, #0e2b2f, #00ffff);
}

.game img {
  /* Al indicar un position absolute la imagen se pone encima del texto, que es
  lo que quiero */
  position: absolute;

  /* Centrar y que la imagen sobresalga del contenedor */
  left: 50%;
  bottom: 0;
  transform: translate(-50%);
  height: 380px;
  z-index: 1;

  transition: all 0.5s;

  /* Evitar el problema del parpadeo en el hover */
  pointer-events: none;
}

.game:hover img {
  left: 75%;

  /* Lo hacemos más grande y sale del contenedor */
  height: 400px;
}

.game .content {
  position: relative;
  width: 50%;
  left: 20%;
  padding: 20px 20px 20px 40px;
  color: #fff;
  opacity: 0;

  transition: all 0.5s;
}

.game:hover .content {
  left: 0;
  opacity: 1;
}

.game .content h2 {
  text-transform: uppercase;
  font-size: 2.2em;
  line-height: 1em;
}

.game .content a {
  position: relative;
  color: #000;
  background: #fff;
  display: inline-block;
  padding: 10px 20px;
  margin-top: 10px;
  font-weight: 700;
}

/** ARTICULOS */

/*? Título de artículo  */
.title {
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  margin: 70px 0 20px 0;
}

.title::before {
  content: 'Blog';
  position: absolute;
  top: -80px;
  display: flex;
  justify-content: center;
  align-items: center;

  font-weight: 600;
  font-size: 12em;
  z-index: -1;
  color: rgba(0, 0, 0, 0.05);
}

.title h1 {
  font-size: 75px;
  font-weight: 300;
}

.title .badget-container {
  margin: 10px;
  display: flex;
  justify-content: center;
  flex-wrap: wrap;
  width: 100%;
}

/* Nos aprovechamos de los estilos generales de los badge y modificamos ciertas cosas */
.title .badget-container .badge {
  background: transparent;
  color: var(--gris-default);
  border: 1px solid var(--gris-default);
}

.title .badget-container .badge:hover {
  background: var(--color-principal);
  color: #fff;
  border: 1px solid transparent;
}

/*? Sección de artículos */
.articulos {
  position: relative;
  padding: 50px;

  display: flex;
  justify-content: space-around;
}

.container-articulos {
  margin: 0 100px 0 0;
}

.card {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: 200px;
  margin: 100px 0;
}

/* Al primer hijo no le aplicamos el margin de arriba */
.card:first-child {
  margin: 0 0 100px 0;
}

.card .imgBox {
  width: 80%;
  height: 100%;
}

.card .imgBox img {
  /* Nos acoplamos al ancho y alto de .card .imgBox */
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: bottom;
}

.card .content {
  padding-left: 20px;
}

/* A todos los elementos dentro de .content los separamos */
.card .content * {
  margin: 15px 0;
}

.card .content h3 {
  font-size: 40px;
  font-weight: 300;
  letter-spacing: 1px;
}

.card .content p {
  font-size: 18px;
}

/*? Menú lateral */
aside {
  width: 50%;
  height: 100%;
  background: var(--color-secundario);
  box-shadow: 0 0 10px 0 var(--color-secundario);
  padding: 20px;
  border-radius: 5px;

  /* Para que me acompañe al hacer scroll */
  /* Hay que indicar la posición */
  position: sticky;
  top: 20px;
}

aside nav {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-start;
}

aside nav a {
  margin: 15px 0;
  color: #fff;
  opacity: 0.5;
  font-weight: 600;
  font-size: 16px;
  text-transform: uppercase;

  transition: all 0.5s;
}

aside nav a:hover {
  opacity: 1;
}
