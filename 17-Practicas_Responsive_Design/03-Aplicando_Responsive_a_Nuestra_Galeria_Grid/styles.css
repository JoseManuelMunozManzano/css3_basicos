* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  display: grid;
  place-items: center;
  height: 100vh;
  background: #000;
}

.grid-container {
  width: 100%;
  padding: 5px;
  display: grid;
  gap: 5px;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  grid-template-rows: repeat(3, 210px);

  /* Para cuando la pantalla se va haciendo más pequeña y genera
     nuevas filas,indicamos que las autogeneradas tengan el mismo
     tamaño de 210px indicado arriba */
  grid-auto-rows: 210px;
  /* Para cuando la pantalla se va haciendo más pequeña y genera
     nuevas filas, se acoplan los elementos sin dejar espacios 
     vacíos. No respeta el orden, ya que lo principal es no
     dejar espacios vacíos. */
  grid-auto-flow: dense;
}

.item {
  transition: all 0.3s;
}

.grid-container:hover .item {
  opacity: 0.2;
}

.item:hover {
  opacity: 1 !important;
}

.item img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.r-span2 {
  grid-row: span 2;
}

.c-span2 {
  grid-column: span 2;
}

/** MEDIA QUERY */
/* Solución de problemas de espacios vacíos cuando la pantalla
   se hace más grande. En concreto, a las dos últimas imágenes les decimos
   que ocupen un tamaño automático para que ocupen los huecos.

   El problema es que entonces todas las imágenes caben en dos filas, pero
   se siguen mostrando tres.
   Se soluciona indicando un grid-template-row: auto, para que se generen
   dos filas en vez de tres.
*/

@media screen and (min-width: 1530px) {
  .grid-container {
    grid-template-rows: auto;
  }

  .item:nth-child(6),
  .item:nth-child(7) {
    grid-column: auto !important;
  }
}

/* En uno de los casos cuando la pantalla se hace más pequeña, vuelven
   a quedar espacios vacíos.
   Para solucionar esto, vamos al último elemento y le decimos que su
   grid-column sea auto, para que se acople a ese hueco y que grid-row sea
   span 2 para que ocupe las dos filas que quedan con hueco.
*/

@media screen and (max-width: 1224px) and (min-width: 920px) {
  .item:nth-child(7) {
    grid-column: auto !important;
    grid-row: span 2 !important;
  }
}
